#version 330
layout (location = 0) in vec3 inPosition;
layout (location = 1) in vec2 inTexCoord;
layout (location = 2) in vec3 inNormal; 

layout (location = 3) in vec3 inTangent;
layout (location = 4) in vec3 inBitangent;  

uniform mat4 uWVP;
uniform mat4 uWorld;

out vec3 vNormal;
out vec3 vWorldPos; 

out mat3 vTBN;

	out vec2 vTexCoord;
	
	void PreVertex() {}
	
	void PostVertex()
	{
		vTexCoord = inTexCoord;
	}
void main()
{
	PreVertex();
	gl_Position = uWVP * vec4(inPosition, 1.0);
	vNormal = (uWorld * vec4(inNormal, 0.0)).xyz; 
	vWorldPos = (uWorld * vec4(inPosition, 1.0)).xyz;
	
	
	vec3 T = normalize(vec3(uWorld * vec4(inTangent,   0.0)));
	vec3 N = normalize(vec3(uWorld * vec4(inNormal,    0.0)));
	
	//vec3 B = normalize(vec3(uWorld * vec4(inBitangent, 0.0))); 
	 
	T = normalize(T - dot(T, N) * N);
	vec3 B = cross(T, N);
	
	vTBN = transpose(mat3(T, B, N));  
	
	PostVertex();
}
